/*
* generated by Xtext
*/
grammar InternalSmallJava;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.example.smalljava.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.example.smalljava.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.example.smalljava.services.SmallJavaGrammarAccess;

}

@parser::members {

 	private SmallJavaGrammarAccess grammarAccess;
 	
    public InternalSmallJavaParser(TokenStream input, SmallJavaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SJProgram";	
   	}
   	
   	@Override
   	protected SmallJavaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSJProgram
entryRuleSJProgram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJProgramRule()); }
	 iv_ruleSJProgram=ruleSJProgram 
	 { $current=$iv_ruleSJProgram.current; } 
	 EOF 
;

// Rule SJProgram
ruleSJProgram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSJProgramAccess().getPackageKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJProgramAccess().getNameQualifiedNameParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJProgramRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSJProgramAccess().getSemicolonKeyword_0_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSJProgramAccess().getImportsSJImportParserRuleCall_1_0()); 
	    }
		lv_imports_3_0=ruleSJImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJProgramRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_3_0, 
        		"SJImport");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSJProgramAccess().getClassesSJClassParserRuleCall_2_0()); 
	    }
		lv_classes_4_0=ruleSJClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJProgramRule());
	        }
       		add(
       			$current, 
       			"classes",
        		lv_classes_4_0, 
        		"SJClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSJImport
entryRuleSJImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJImportRule()); }
	 iv_ruleSJImport=ruleSJImport 
	 { $current=$iv_ruleSJImport.current; } 
	 EOF 
;

// Rule SJImport
ruleSJImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSJImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSJImportAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleSJClass
entryRuleSJClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJClassRule()); }
	 iv_ruleSJClass=ruleSJClass 
	 { $current=$iv_ruleSJClass.current; } 
	 EOF 
;

// Rule SJClass
ruleSJClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSJClassAccess().getClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSJClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSJClassAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSJClassAccess().getSuperclassSJClassCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSJClassAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJClassAccess().getMembersSJMemberParserRuleCall_4_0()); 
	    }
		lv_members_5_0=ruleSJMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJClassRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_5_0, 
        		"SJMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSJClassAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSJMember
entryRuleSJMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJMemberRule()); }
	 iv_ruleSJMember=ruleSJMember 
	 { $current=$iv_ruleSJMember.current; } 
	 EOF 
;

// Rule SJMember
ruleSJMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSJMemberAccess().getSJFieldParserRuleCall_0()); 
    }
    this_SJField_0=ruleSJField
    { 
        $current = $this_SJField_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSJMemberAccess().getSJMethodParserRuleCall_1()); 
    }
    this_SJMethod_1=ruleSJMethod
    { 
        $current = $this_SJMethod_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSJField
entryRuleSJField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJFieldRule()); }
	 iv_ruleSJField=ruleSJField 
	 { $current=$iv_ruleSJField.current; } 
	 EOF 
;

// Rule SJField
ruleSJField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSJFieldAccess().getAccessSJAccessLevelEnumRuleCall_0_0()); 
	    }
		lv_access_0_0=ruleSJAccessLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJFieldRule());
	        }
       		set(
       			$current, 
       			"access",
        		lv_access_0_0, 
        		"SJAccessLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJFieldRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSJFieldAccess().getTypeSJClassCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSJFieldAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSJFieldAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleSJMethod
entryRuleSJMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJMethodRule()); }
	 iv_ruleSJMethod=ruleSJMethod 
	 { $current=$iv_ruleSJMethod.current; } 
	 EOF 
;

// Rule SJMethod
ruleSJMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSJMethodAccess().getAccessSJAccessLevelEnumRuleCall_0_0()); 
	    }
		lv_access_0_0=ruleSJAccessLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJMethodRule());
	        }
       		set(
       			$current, 
       			"access",
        		lv_access_0_0, 
        		"SJAccessLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJMethodRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSJMethodAccess().getTypeSJClassCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSJMethodAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSJMethodAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSJMethodAccess().getParamsSJParameterParserRuleCall_4_0_0()); 
	    }
		lv_params_4_0=ruleSJParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"SJParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSJMethodAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJMethodAccess().getParamsSJParameterParserRuleCall_4_1_1_0()); 
	    }
		lv_params_6_0=ruleSJParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_6_0, 
        		"SJParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSJMethodAccess().getRightParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJMethodAccess().getBodySJMethodBodyParserRuleCall_6_0()); 
	    }
		lv_body_8_0=ruleSJMethodBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJMethodRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_8_0, 
        		"SJMethodBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSJParameter
entryRuleSJParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJParameterRule()); }
	 iv_ruleSJParameter=ruleSJParameter 
	 { $current=$iv_ruleSJParameter.current; } 
	 EOF 
;

// Rule SJParameter
ruleSJParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJParameterRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSJParameterAccess().getTypeSJClassCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSJParameterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleSJMethodBody
entryRuleSJMethodBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJMethodBodyRule()); }
	 iv_ruleSJMethodBody=ruleSJMethodBody 
	 { $current=$iv_ruleSJMethodBody.current; } 
	 EOF 
;

// Rule SJMethodBody
ruleSJMethodBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSJMethodBodyAccess().getSJMethodBodyAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSJMethodBodyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJMethodBodyAccess().getStatementsSJStatementParserRuleCall_2_0()); 
	    }
		lv_statements_2_0=ruleSJStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJMethodBodyRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"SJStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSJMethodBodyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSJStatement
entryRuleSJStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJStatementRule()); }
	 iv_ruleSJStatement=ruleSJStatement 
	 { $current=$iv_ruleSJStatement.current; } 
	 EOF 
;

// Rule SJStatement
ruleSJStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSJStatementAccess().getSJVariableDeclarationParserRuleCall_0()); 
    }
    this_SJVariableDeclaration_0=ruleSJVariableDeclaration
    { 
        $current = $this_SJVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSJStatementAccess().getSJReturnParserRuleCall_1()); 
    }
    this_SJReturn_1=ruleSJReturn
    { 
        $current = $this_SJReturn_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getSJStatementAccess().getSJExpressionParserRuleCall_2_0()); 
    }
    this_SJExpression_2=ruleSJExpression
    { 
        $current = $this_SJExpression_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSJStatementAccess().getSemicolonKeyword_2_1());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getSJStatementAccess().getSJIfStatementParserRuleCall_3()); 
    }
    this_SJIfStatement_4=ruleSJIfStatement
    { 
        $current = $this_SJIfStatement_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSJReturn
entryRuleSJReturn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJReturnRule()); }
	 iv_ruleSJReturn=ruleSJReturn 
	 { $current=$iv_ruleSJReturn.current; } 
	 EOF 
;

// Rule SJReturn
ruleSJReturn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='return' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSJReturnAccess().getReturnKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJReturnAccess().getExpressionSJExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleSJExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJReturnRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"SJExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSJReturnAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleSJVariableDeclaration
entryRuleSJVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJVariableDeclarationRule()); }
	 iv_ruleSJVariableDeclaration=ruleSJVariableDeclaration 
	 { $current=$iv_ruleSJVariableDeclaration.current; } 
	 EOF 
;

// Rule SJVariableDeclaration
ruleSJVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJVariableDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSJVariableDeclarationAccess().getTypeSJClassCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSJVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJVariableDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSJVariableDeclarationAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJVariableDeclarationAccess().getExpressionSJExpressionParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleSJExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"SJExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSJVariableDeclarationAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleSJIfStatement
entryRuleSJIfStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJIfStatementRule()); }
	 iv_ruleSJIfStatement=ruleSJIfStatement 
	 { $current=$iv_ruleSJIfStatement.current; } 
	 EOF 
;

// Rule SJIfStatement
ruleSJIfStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSJIfStatementAccess().getIfKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSJIfStatementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJIfStatementAccess().getExpressionSJExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleSJExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJIfStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"SJExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSJIfStatementAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJIfStatementAccess().getThenBlockSJIfBlockParserRuleCall_4_0()); 
	    }
		lv_thenBlock_4_0=ruleSJIfBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJIfStatementRule());
	        }
       		set(
       			$current, 
       			"thenBlock",
        		lv_thenBlock_4_0, 
        		"SJIfBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_5='else' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSJIfStatementAccess().getElseKeyword_5_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSJIfStatementAccess().getElseBlockSJIfBlockParserRuleCall_5_1_0()); 
	    }
		lv_elseBlock_6_0=ruleSJIfBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJIfStatementRule());
	        }
       		set(
       			$current, 
       			"elseBlock",
        		lv_elseBlock_6_0, 
        		"SJIfBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleSJIfBlock
entryRuleSJIfBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJIfBlockRule()); }
	 iv_ruleSJIfBlock=ruleSJIfBlock 
	 { $current=$iv_ruleSJIfBlock.current; } 
	 EOF 
;

// Rule SJIfBlock
ruleSJIfBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSJIfBlockAccess().getStatementsSJStatementParserRuleCall_0_0()); 
	    }
		lv_statements_0_0=ruleSJStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJIfBlockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_0_0, 
        		"SJStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSJIfBlockAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJIfBlockAccess().getStatementsSJStatementParserRuleCall_1_1_0()); 
	    }
		lv_statements_2_0=ruleSJStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJIfBlockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"SJStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSJIfBlockAccess().getRightCurlyBracketKeyword_1_2());
    }
))
;









// Entry rule entryRuleSJExpression
entryRuleSJExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJExpressionRule()); }
	 iv_ruleSJExpression=ruleSJExpression 
	 { $current=$iv_ruleSJExpression.current; } 
	 EOF 
;

// Rule SJExpression
ruleSJExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSJExpressionAccess().getSJAssignmentParserRuleCall()); 
    }
    this_SJAssignment_0=ruleSJAssignment
    { 
        $current = $this_SJAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSJAssignment
entryRuleSJAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJAssignmentRule()); }
	 iv_ruleSJAssignment=ruleSJAssignment 
	 { $current=$iv_ruleSJAssignment.current; } 
	 EOF 
;

// Rule SJAssignment
ruleSJAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSJAssignmentAccess().getSJSelectionExpressionParserRuleCall_0()); 
    }
    this_SJSelectionExpression_0=ruleSJSelectionExpression
    { 
        $current = $this_SJSelectionExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSJAssignmentAccess().getSJAssignmentLeftAction_1_0(),
            $current);
    }
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSJAssignmentAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJAssignmentAccess().getRightSJExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSJExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJAssignmentRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SJExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleSJSelectionExpression
entryRuleSJSelectionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJSelectionExpressionRule()); }
	 iv_ruleSJSelectionExpression=ruleSJSelectionExpression 
	 { $current=$iv_ruleSJSelectionExpression.current; } 
	 EOF 
;

// Rule SJSelectionExpression
ruleSJSelectionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSJSelectionExpressionAccess().getSJTerminalExpressionParserRuleCall_0()); 
    }
    this_SJTerminalExpression_0=ruleSJTerminalExpression
    { 
        $current = $this_SJTerminalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSJSelectionExpressionAccess().getSJMemberSelectionReceiverAction_1_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSJSelectionExpressionAccess().getFullStopKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJSelectionExpressionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSJSelectionExpressionAccess().getMemberSJMemberCrossReference_1_2_0()); 
	}

)
)((
(
		lv_methodinvocation_4_0=	'(' 
    {
        newLeafNode(lv_methodinvocation_4_0, grammarAccess.getSJSelectionExpressionAccess().getMethodinvocationLeftParenthesisKeyword_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJSelectionExpressionRule());
	        }
       		setWithLastConsumed($current, "methodinvocation", true, "(");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSJSelectionExpressionAccess().getArgsSJExpressionParserRuleCall_1_3_1_0_0()); 
	    }
		lv_args_5_0=ruleSJExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJSelectionExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"SJExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSJSelectionExpressionAccess().getCommaKeyword_1_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSJSelectionExpressionAccess().getArgsSJExpressionParserRuleCall_1_3_1_1_1_0()); 
	    }
		lv_args_7_0=ruleSJExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSJSelectionExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_7_0, 
        		"SJExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSJSelectionExpressionAccess().getRightParenthesisKeyword_1_3_2());
    }
)?)*)
;





// Entry rule entryRuleSJTerminalExpression
entryRuleSJTerminalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSJTerminalExpressionRule()); }
	 iv_ruleSJTerminalExpression=ruleSJTerminalExpression 
	 { $current=$iv_ruleSJTerminalExpression.current; } 
	 EOF 
;

// Rule SJTerminalExpression
ruleSJTerminalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSJTerminalExpressionAccess().getSJStringConstantAction_0_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getSJTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJTerminalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSJTerminalExpressionAccess().getSJIntConstantAction_1_0(),
            $current);
    }
)(
(
		lv_value_3_0=RULE_INT
		{
			newLeafNode(lv_value_3_0, grammarAccess.getSJTerminalExpressionAccess().getValueINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJTerminalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"INT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSJTerminalExpressionAccess().getSJBoolConstantAction_2_0(),
            $current);
    }
)(
(
(
		lv_value_5_1=	'true' 
    {
        newLeafNode(lv_value_5_1, grammarAccess.getSJTerminalExpressionAccess().getValueTrueKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJTerminalExpressionRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_5_1, null);
	    }

    |		lv_value_5_2=	'false' 
    {
        newLeafNode(lv_value_5_2, grammarAccess.getSJTerminalExpressionAccess().getValueFalseKeyword_2_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJTerminalExpressionRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_5_2, null);
	    }

)

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSJTerminalExpressionAccess().getSJThisAction_3_0(),
            $current);
    }
)	otherlv_7='this' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSJTerminalExpressionAccess().getThisKeyword_3_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSJTerminalExpressionAccess().getSJSuperAction_4_0(),
            $current);
    }
)	otherlv_9='super' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSJTerminalExpressionAccess().getSuperKeyword_4_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSJTerminalExpressionAccess().getSJNullAction_5_0(),
            $current);
    }
)	otherlv_11='null' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSJTerminalExpressionAccess().getNullKeyword_5_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSJTerminalExpressionAccess().getSJSymbolRefAction_6_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJTerminalExpressionRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getSJTerminalExpressionAccess().getSymbolSJSymbolCrossReference_6_1_0()); 
	}

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSJTerminalExpressionAccess().getSJNewAction_7_0(),
            $current);
    }
)	otherlv_15='new' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSJTerminalExpressionAccess().getNewKeyword_7_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSJTerminalExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSJTerminalExpressionAccess().getTypeSJClassCrossReference_7_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17='(' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSJTerminalExpressionAccess().getLeftParenthesisKeyword_7_3());
    }
	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSJTerminalExpressionAccess().getRightParenthesisKeyword_7_4());
    }
)
    |(	otherlv_19='(' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSJTerminalExpressionAccess().getLeftParenthesisKeyword_8_0());
    }

    { 
        newCompositeNode(grammarAccess.getSJTerminalExpressionAccess().getSJExpressionParserRuleCall_8_1()); 
    }
    this_SJExpression_20=ruleSJExpression
    { 
        $current = $this_SJExpression_20.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_21=')' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSJTerminalExpressionAccess().getRightParenthesisKeyword_8_2());
    }
))
;





// Rule SJAccessLevel
ruleSJAccessLevel returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='private' 
	{
        $current = grammarAccess.getSJAccessLevelAccess().getPRIVATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSJAccessLevelAccess().getPRIVATEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='public' 
	{
        $current = grammarAccess.getSJAccessLevelAccess().getPUBLICEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSJAccessLevelAccess().getPUBLICEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='protected' 
	{
        $current = grammarAccess.getSJAccessLevelAccess().getPROTECTEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSJAccessLevelAccess().getPROTECTEDEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


